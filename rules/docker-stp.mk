# docker image for stp

DOCKER_STP_STEM = docker-stp
DOCKER_STP = $(DOCKER_STP_STEM).gz
DOCKER_STP_DBG = $(DOCKER_STP_STEM)-$(DBG_IMAGE_MARK).gz

$(DOCKER_STP)_DEPENDS += $(SONIC_STP) $(SWSS) $(SONIC_RSYSLOG_PLUGIN)

$(DOCKER_STP)_DBG_DEPENDS = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_DEPENDS)
$(DOCKER_STP)_DBG_DEPENDS += $(SONIC_STP_DBG) $(LIBSWSSCOMMON_DBG) $(SWSS)

$(DOCKER_STP)_DBG_IMAGE_PACKAGES = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_IMAGE_PACKAGES)

$(DOCKER_STP)_LOAD_DOCKERS = $(DOCKER_CONFIG_ENGINE_BULLSEYE)

$(DOCKER_STP)_PATH = $(DOCKERS_PATH)/$(DOCKER_STP_STEM)

$(DOCKER_STP)_INSTALL_PYTHON_WHEELS = $(SONIC_UTILITIES_PY3)
$(DOCKER_STP)_INSTALL_DEBS = $(PYTHON3_SWSSCOMMON)

$(DOCKER_STP)_VERSION = 1.0.0
$(DOCKER_STP)_PACKAGE_NAME = stp

$(DOCKER_DHCP)_SERVICE_REQUIRES = updategraph
$(DOCKER_DHCP)_SERVICE_AFTER = database

SONIC_DOCKER_IMAGES += $(DOCKER_STP)
ifeq ($(INCLUDE_STP), y)
SONIC_INSTALL_DOCKER_IMAGES += $(DOCKER_STP)
endif

SONIC_DOCKER_DBG_IMAGES += $(DOCKER_STP_DBG)
ifeq ($(INCLUDE_STP), y)
SONIC_INSTALL_DOCKER_DBG_IMAGES += $(DOCKER_STP_DBG)
endif

$(DOCKER_STP)_CONTAINER_NAME = stp
$(DOCKER_STP)_RUN_OPT += --privileged -t
$(DOCKER_STP)_RUN_OPT += -v /etc/sonic:/etc/sonic:ro

SONIC_BULLSEYE_DOCKERS += $(DOCKER_STP)
SONIC_BULLSEYE_DBG_DOCKERS += $(DOCKER_STP_DBG)
